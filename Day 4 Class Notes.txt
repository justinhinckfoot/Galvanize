Day 4 Class Notes
Thursday, June 28, 2018

itertools help iterate over variables

itertools.combinations

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
CIRCLE BACK AROUND TO UNIT 3 EXERCISES AND COMPLETE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




NumPy
--------------------------
NumPy is a library that needs to be imported
import numpy as np
  assigns np as a variable -- shorthand

using from numpy import * imports everything and can overwrite the built in function

arange generates a range array instead of a list
  np.arange(100000) <-- range of values up to 100,000

  when dealing with large ranges of values, an array will be more performant than a range

  np.sum(ARRAY) is faster than sum(LIST)

  .dtype provides the datatype of an array




Leveraging an Array
---------------------------
leveraging .shape will indicate the format of the array

reshape allows you to change the shape of an array
  arr.reshape((6, 6)) <-- converts the array to 6 rows and 6 columns

  you can call the shape of a reshape
    arr.reshape((6, 6)).shape

  you can split an array into multiple arrays by adding a third command
    arr.reshape((3, 3, -1))
      ^^^ -1 removes the last row in the array so there are no trailing values

a numpy array is mutuable but you cannot reshape the array
    using the reshape command creates a new object in memory

can perform arithmetics on an array
    arr * 3 <---- multiples all values by 3

should avoid looping through an array

.flatten -- returns the array to a single array in one row
  arr.flatten()

iterating through a list and an array with a for loop will yield about the same performance




Indexing and Slicing
---------------------------
indexing and slicing work the same way as with lists and arrays

Create an array of shape (4,5) starting with np.arange(20), then obtain the mean
value of elements in rows 1, 2 inclusive and columns 1-3 inclusive (zero-based)

import numpy as np

arr = np.arange(20)
arr = arr.reshape(4, 5)
np.mean(arr[1:3, 1:4])


numpy.zeros(X) creates an array of X zeros
    can be helpful if you need to initialize an array and change some values after
    could also use numpy.ones(X)

numpy.random -- isn't a function but rather a sub-module within numpy
    there are a number of functions in .random
    numpy.random.FUNCTION

numpy.random.randn(N) -- returns a random set of N values

can string several values from numpy into a single command
    np.arange(20).reshape(4,-1)[1:3, 1:4].mean()
    ^^^^ creates an array of numbers 0-19, then reshapes it into a 4 x 5 array,
          but only grabs rows 1 & 2 and columns 1-3, and then takes the mean of the values






Boolean Indexing
---------------------------
can filter for values that are TRUE in an index statement
    arr = np.arange(20)
    arr[arr > 7] <--- outputs all values in the arr variable that are greater than 7






Fancy Indexing
---------------------------
can feed an array a list of indexing to see the individual values
    fancy indexing must be passed as an index
    arr[[1, 3, 5, -1]]
    ^^^^^^^^^ provides the values in the 1, 3, 5, and -1 position from the arr array



Day 4 Homework
--------------------------
Unit 6 - Lessons 1-3
Unit 6 - Exercise 1
